/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 15.08.2 ] */

/* [wxMaxima: title   start ]
Função Exponencial Múltipla de Ordem n
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
    Arkanon <arkanon@lsd.org.br>
    2015/09/13 (Sun) 20:40:15 (BRS)
    2015/09/13 (Sun) 00:54:55 (BRS)
    2015/09/12 (Sat) 14:22:44 (BRS)
    2015/09/12 (Sat) 04:21:21 (BRS)
    2015/09/11 (Fri) 22:26:12 (BRS)
    2014/03/24 (Mon) 02:58:17 (BRS)
    2014/03/23 (Sun) 13:27:40 (BRS)

Apesar da fama do 𝜋, o 𝑒  é o mais ativo. Quando menos se espera, ele dá o ar da graça.

http://en.wikipedia.org/wiki/tetration
http://pt.wikipedia.org/wiki/tetração
http://en.wikipedia.org/wiki/reuben_goodstein
http://maxima-online.org/?inc=r-910537206
http://euler.rene-grothmann.de/Programs/22%20-%20Maxima%20-%20More%20Details.html

time (cat fn.mac | maxima -q)
   [wxMaxima: comment end   ] */

/* [wxMaxima: section start ]
𝑓ₙ(𝑥) – 𝑛 ∊ ℕ, 𝑥 ∊(0,1] ⊂ ℝ
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
f(n,x) := block
(
  [
    f : 1,
    i : 1
  ],
  while (i<=n) do
  (
    f : xi^f,
    i : i+1
  ),
  if x=0 then if remainder(n,2)=0 then 1 else 0 else ev(f,xi=x)
/*if x=0 then limit(f,xi,x,plus) else ev(f,xi=x) */ /* demora demais para encontrar o limite quando n>7 */
)$

df(n,x) := diff(f(n,x),x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
𝑟ₙ(𝑥) – 𝑛 ∊ ℕ, 𝑥 >0 ∊ ℝ
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
r(n,x) := block
(
  [
    r : -1,
    i : 1
  ],
  while (i<=n-2) do
  (
    r : -xi^r,
    i : i+1
  ),
  r : xi^xi^r,
  if x=0 then 0 elseif n=0 then 0 elseif n=1 then x else ev(r,xi=x)
/*if x=0 then limit(r,xi,x,plus) elseif n=0 then 0 elseif n=1 then x else ev(r,xi=x) */
)$

dr(n,x) := diff(r(n,x),x)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Mínimos e Máximos
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
𝑒^+𝑒          15.15426224147926  ♦   𝑟       𝑟∞𝑥
𝑒^+1     2.71828182845904    𝑟₂𝑥   𝑟∞𝑦
𝑒^-𝑒^-1  1.44466786100976  ⬛  𝑟₂𝑦
𝑒^+𝑒^-1  0.69220062755535  ⬛  𝑓₂𝑦
𝑒^-1     0.36787944117144    𝑓₂𝑥   𝑓∞𝑦
𝑒^-𝑒            0.06598803584531  ♦    𝑓       𝑓∞𝑥
   [wxMaxima: comment end   ] */

/* [wxMaxima: section start ]
Testes
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
 n:4$
 f(n,x);
df(n,x);
2^2^2^2;
2^(2^(2^(2)));
(((2)^2)^2)^2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f(  0,0);
f(  1,0);
f(  2,0);
f(  3,0);
f(  0,2);
f(  1,2);
f(  2,2);
f(  3,2);
f(  4,2);
f(100,0);
f(101,0);

f( 38,.5);
f( 39,.5);
f( 40,.5);
f(671,.5);

/*  118 limite recursão 32 bit big float 2x */
/*  144 limite recursão 32 bit big float 1x */
/*  183 limite recursão 32 bit big float 0x */

/* 1979 limite recursão 64 bit big float 2x */
/* 2436 limite recursão 64 bit big float 1x */
/* 3166 limite recursão 64 bit big float 0x */

end$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
 n:4$
 x^x^-x^-x^-1;
 r(n,x);
dr(n,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
r(  0,0);
r(  1,0);
r(  2,0);
r(  3,0);
r(  0,2);
r(  1,2);
r(  2,2);
r(  3,2);
r(  4,2);
r(100,0);
r(101,0);

r( 38,2.0);
r( 39,2.0);
r( 40,2.0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
r(336,2.0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
lim 𝑛➛ min 𝑓₂ₙ(𝑥)
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: comment start ]
   n   t               x                  y
                             1/𝑒                                       ᵉ√𝑒
   2   00:00:00.000    0.36787944117144   0.69220062755535
 336   00:00:10.020    0.07120376008026   0.37432842646748   32bit
1000   00:00:48.703    0.06795091135496   0.37027993153836
2000   00:03:21.536    0.06703716158006   0.36915146353127
3000   00:11:37.409    0.06671391337319   0.36875506132229
4000   00:20:04.063    0.06654652728576   0.36855074558021
5000   00:34:59.069    0.06644356539002   0.36842549864804
                      0.06598803584531   0.36787944117144
                            1/𝑒ᵉ                              1/𝑒
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
  n : 336$ /* x64 */ 
/*n :   2$ /* x86 */
showtime:true$
xm : find_root(df(n,x),x,.065,1.072);
ym : f(n,xm);
showtime:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
lim 𝑛➛ max 𝑟₂ₙ(𝑥)
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: comment start ]
   n   t               x                  y
                                                                       𝑒                                        1/ᵉ√𝑒
   2   00:00:00.000    2.71828182845904   1.44466786100976
 334   00:00:10.540   14.03871516171082   2.67120340068981   32bit
1000   00:01:20.293   14.71650607857512   2.70065946011546
2000   00:05:16.733   14.91709935847640   2.70891517111726
3000   00:19:14.894   14.98937701954345   2.71182718527080
4000   00:36:31.561   15.02708016161075   2.71333055757540
5000   00:74:10.136   15.05036633916233   2.71425295933518
                     15.15426224147926   2.71828182845904
                                                                        𝑒ᵉ                                𝑒
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
  n : 334$ /* x64 */
/*n :   2$ /* x86 */
showtime:true$
xm : find_root(dr(n,x),x,14.0,15.2);
ym : r(n,xm);
showtime:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Gráficos
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
minset(lastn,funcao,intx) := block
(
  [
    i   : 2,
    xm  : 0,
    ym  : 0,
    set : [],
    fi,
    di
  ],
  while (i<=lastn) do
  (
    fi  : apply(funcao,[i,x]),
    di  : diff(fi,x),
    xm  : find_root(di,x,intx[1],intx[2]),
    ym  : ev(fi,x=xm),
    set : append(set,[[xm,ym]]),
    i   : i+2
  ),
  set
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
fnplot(record,lastn) := block
(

  [
    funcao : record[1],
    xisz   : record[2],
    intx   : record[3],
    winx   : record[4],
    winy   : record[5]
  ],

   minims      : minset(lastn,funcao,intx),
/* wxplot_size : [400,400], */

  print(minims[1]),
  print(last(minims)),
  print(length(minims)),

  errormsg:false,
  with_slider
  (
    i,
    makelist(i,i,0,lastn/2),
    [
      if x>0 then apply(funcao,[2*i  ,x]) else apply(funcao,[2*i  ,0]),
      if x>0 then apply(funcao,[2*i+1,x]) else apply(funcao,[2*i+1,0]),
      [ discrete, minims ]
    ],
    winx,
    winy,
    [ style, [lines], [lines], [points,0.5] ],
    [ point_type, bullet ],
    [ color, blue, red, black ],
    [ legend, false ],
    [ box, false ],
    [ same_xy, true ],
    [ xtics, false ],
    [ ytics, false ]
  ),
  errormsg:false

)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*  f  xisz      intx(sol)       winx          winy  */
fn:[f, [ 0, 1 ], [ 0.01,  1.0 ], [ x, 0,  1 ], [ y, 0, 1 ] ]$
rn:[r, [ 0, 0 ], [ 2.70, 15.2 ], [ x, 0, 15 ], [ y, 0, 5 ] ]$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ate : 300$ /* x64 */
ate :  10$ /* x86 */
showtime:true$
                  fnplot(fn,ate);
showtime:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
ate : 300$ /* x64 */
ate :  10$ /* x86 */
showtime:true$
                  fnplot(rn,ate)$
showtime:false$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
fnsave(i, size, prefix) := block
(
  if (i< 10) then z1 : 0 else z1 : "",
  if (i<100) then z2 : 0 else z2 : "",
  plot2d
  (
    [
      if x>0 then apply(f,[2*i  ,x]) else apply(f,[2*i  ,0]),
      if x>0 then apply(f,[2*i+1,x]) else apply(f,[2*i+1,0]),
      [ discrete, append(min,[[0.06598803584531,0.36787944117144]]) ]
    ],
    [ x, 0, 1 ],
    [ y, 0, 1 ],
    [ legend, concat("f",2*i,"(x)"), concat("f",2*i+1,"(x)"), "Min Set" ],
    [ style, [lines], [lines], [points,0.5] ],
    [ point_type, bullet ],
    [ xlabel, false ],
    [ box, true ],
    [ same_xy, true ],
    cores,
    [ plot_format, gnuplot ],

    /* http://www.gnuplotting.org/manpage-gnuplot-4-6/#Q1-1-42 */
    [ gnuplot_preamble, "
                         set key b;
                         set lmargin 8;
                         set rmargin 8;
                         set style line 11 lc rgb '#808080' lt 1;
                         set border 3 ls 11;
                         set arrow from graph 1,0 to graph 1.025,0 size screen 0.025,15,60 filled ls 11;
                         set arrow from graph 0,1 to graph 0,1.025 size screen 0.025,15,60 filled ls 11;
                         set arrow from 0.06598803584531,0 to 0.06598803584531,0.36787944117144 nohead lt 0;
                         set arrow from 0.36787944117144,0 to 0.36787944117144,0.69220062755535 nohead lt 0;
                         set arrow from 0,0.36787944117144 to 0.06598803584531,0.36787944117144 nohead lt 0;
                         set arrow from 0,0.69220062755535 to 0.36787944117144,0.69220062755535 nohead lt 0;
                         set tics nomirror out scale 0 textcolor rgb 'black';
                         set xtics ('0&{------}' 0, '1/𝑒^𝑒' 0.06598803584531, '1/𝑒 '                     0.36787944117144, 1);
                         set ytics (                '1/𝑒'   0.36787944117144, '^𝑒{/Symbol \\326}~𝑒{.7–}' 0.69220062755535, 1);
                        " ],

    [ gnuplot_term,     concat( formato, " enhanced size ", size, ",", size ) ],
    [ gnuplot_out_file, concat( dir, prefix, z2, z1, i, ".", substring(formato,1,4) ) ]

  )
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
:lisp ( defun $getenv (string) ( si:getenv string ) );
sys(command) := block
(
  [lines:[]],
  file : "/tmp/out",
  system(concat(command, " > ", file)),
  out : openr(file),
  while stringp( line : readline(out) ) do lines : append(lines, [line]),
  close(out),
  lines
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
HOME : getenv("HOME")$
arch : sys("uname -p")$
ls   : sys(concat("ls -1 ",HOME,"/"))$
HOME;
arch;
ls;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dir     : concat( HOME, "/git/fn/image/2" );
cores   : [ color, blue, red, black ]$
formato : "svg"$
formato : "pngcairo"$
n       : 10$
min     : minset(n, f, [ 0.01,  1.0 ])$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
i:0$
while (i<=n/2) do ( fnsave( i, 900, "/frames/frame-" ), i:i+1 );
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
for i:50 step 50 thru 350 do fnsave( i, 900, "/frames/frame-" );
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
i:0$
while (i<=n/2) do ( fnsave( i, 300, "/thumbs/fn-thumb-" ), i:i+1 );
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot_size : [400,400]$
wxplot_pngcairo : true$

lastn : 10$
nlist : makelist( i, i, 0, lastn)$
showtime:false$
wxplot2d
(
  makelist( if x>0 then apply(f,[n,x]) else apply(f,[n,0]), n, nlist),
  [ x, 0, 1 ],
  [ y, 0, 1 ],
  [ color, blue, red ],
  [ legend, false ],
  [ box, false ],
  [ same_xy, true ],
  [ xtics, false ],
  [ ytics, false ]
)$
showtime:false$
/*
    64s para n=100
   221s para n=200
   524s para n=300
*/;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f(n,x) := block
(
  [
    f : 1,
    i : 1
  ],
  while (i<=n) do
  (
    f : xi^f,
    i : i+1
  ),
  if x=0 then if remainder(n,2)=0 then 1 else 0 else ev(f,xi=x)
)$

wxplot_size     : [400,400]$
wxplot_pngcairo : false$
fnlist : makelist( f(n,x), n, 0, 10 );
wxdraw2d( fnlist )$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/*
   http://maxima-online.org/tags/index/["append","apply","draw","draw2d","explicit","load","makelist"]
   http://mcs.une.edu.au/doc/wxmaxima/wxmaxima_2.html
*/

a        :  1;
b        :  2;
x(i,n)   := a+i*((b-a)/n);
rects(n) := makelist( rectangle( [ x(k-1,n), 0 ], [ x(k,n), 1/x(k,n) ] ), k, 1, n );

/*
wxdraw2d( explicit( 1/x, x, -1, 1 ) );
*/

wxdraw2d( rects(20) );
wxgr(n)  := apply( wxdraw2d, append( [ xrange=[ a-(b-a)/4, b+(b-a)/4 ], color=blue ], rects(n), [ transparent=true, explicit( 1/x, x, a-(b-a)/4, b+(b-a)/4 ) ] ) );
wxgr(20);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
chaosgame([[0, 0], [1, 0], [0.5, sqrt(3)/2]], [0.1, 0.1], 1/2, 300, [style, dots]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
table_form(
    [
        [1,2],
        [3,4]
    ]
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dir     : concat( HOME, "/git/fn/image/2" )$
formato : "pngcairo"$
lastn   : 370$
nlist   : makelist( i, i, 0, lastn)$
size    : 900$
prefix  : concat( "/fn-", lastn )$

showtime:true$
plot2d
(
  makelist( if x>0 then apply(f,[n,x]) else apply(f,[n,0]), n, nlist),
  [ x, 0, 1 ],
  [ y, 0, 1 ],
  [ color, blue, red ],
  [ legend, false ],
  [ xlabel, false ],
  [ box, true ],
  [ same_xy, true ],
  [ point_type, bullet ],
  [ plot_format, gnuplot ],
  [ gnuplot_preamble, "
                       set key b;
                       set lmargin 8;
                       set rmargin 8;
                       set style line 11 lc rgb '#808080' lt 1;
                       set border 3 ls 11;
                       set arrow from graph 1,0 to graph 1.025,0 size screen 0.025,15,60 filled ls 11;
                       set arrow from graph 0,1 to graph 0,1.025 size screen 0.025,15,60 filled ls 11;
                       set arrow from 0.06598803584531,0 to 0.06598803584531,0.36787944117144 nohead lt 0;
                       set arrow from 0.36787944117144,0 to 0.36787944117144,0.69220062755535 nohead lt 0;
                       set arrow from 0,0.36787944117144 to 0.06598803584531,0.36787944117144 nohead lt 0;
                       set arrow from 0,0.69220062755535 to 0.36787944117144,0.69220062755535 nohead lt 0;
                       set tics nomirror out scale 0 textcolor rgb 'black';
                       set xtics ('0&{------}' 0, '1/𝑒^𝑒' 0.06598803584531, '1/𝑒 '                     0.36787944117144, 1);
                       set ytics (                '1/𝑒'   0.36787944117144, '^𝑒{/Symbol \\326}~𝑒{.7–}' 0.69220062755535, 1);
                      " ],
  [ gnuplot_term,     concat( formato, " enhanced size ", size, ",", size ) ],
  [ gnuplot_out_file, concat( dir, prefix, ".", substring(formato,1,4) ) ]
);
showtime:false$
/*
   442s para n=300
   546s para n=350
*/;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
EOF
   [wxMaxima: section end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
