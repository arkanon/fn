
f(n,x) := if     ( x<=0 and remainder(n,2) = 1         ) then 0
          elseif ( x<=0 and remainder(n,2) = 0 or n<=0 ) then 1
                                                         else bfloat(x^bfloat(f(n-1,x)));

fpprec:72;

minset(n) := block
(
  [
    f1  : 1,
    i   : 2,
    x2  : 0,
    y2  : 0,
    min : [],
    cor : [color,blue,red]
  ],
  while (i<=n) do
  (
    f0  : x^f1,
    f1  : x^f0,
    d1  : diff(f1,x),
    x2  : bfloat(find_root(d1,x,0.01,1)),
    y2  : bfloat(ev(f1,x=x2)),
    min : append(min,[[x2,y2]]),
    cor : append(cor,[black]),
    i   : i+2
  ),
  [min,cor]
);

/* 1979 limite recursÃ£o 64 bit big float 2x */
n       : 400;
set     : minset(n);
minimos : set[1];
cores   : set[2];

minimos[1];
last(minimos);
length(minimos);

i : 0;

while (i<=n/2) do
(
  if (i< 10) then z1 : 0 else z1 : "",
  if (i<100) then z2 : 0 else z2 : "",
  plot2d
  (
    [ f(2*i,x), f(2*i+1,x), [ discrete, minimos ] ],
    [ x, 0, 1 ],
    [ legend, concat("f",2*i,"(x)"), concat("f",2*i+1,"(x)"), "Min Set" ],
    cores,
    [ style, lines, lines, dots ],
    [ box,              false ],
    [ plot_format,      gnuplot ],
    [ gnuplot_preamble, "set size 1,1" ],
    [ gnuplot_term,     "pngcairo enhanced size 900,900" ],
    [ gnuplot_out_file, concat("frame-",z2,z1,i,".png") ]
  ),
  i : i+1
);

